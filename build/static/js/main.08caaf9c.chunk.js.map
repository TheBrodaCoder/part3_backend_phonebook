{"version":3,"sources":["service/Persons_service.js","Persons.js","BookLine.js","Book.js","Filter.js","NewEntry.js","Notification.js","App.js","index.js"],"names":["axios","require","baseUrl","module","exports","getAll","get","addPerson","newObject","post","popPerson","id","delete","updatePerson","put","persons","name","number","BookLine","props","onClick","handleClick","Book","searchedPhones","isSearching","map","person","Filter","type","onChange","handleSearch","onKeyUp","handleKeyUp","value","stringToSearch","NewEntry","onSubmit","handleSubmit","handleChange","newName","newNumber","Notification","noti","display","className","style","borderRadius","border","error","backgroundColor","width","alignItems","color","fontWeight","textAlign","msj","App","useState","setPersons","setNewName","setNewNumber","setStrSearch","setSearchedPhones","setIsSearching","setNoti","useEffect","personService","then","response","data","catch","console","log","handleNoti","setTimeout","evt","preventDefault","target","searchedPhone","filter","match","RegExp","newPerson","some","finally","alert","window","confirm","personToUpdate","deleted","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08caaf9c.chunk.js","sourcesContent":["const axios = require('axios');\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl);\r\n}\r\n\r\nconst addPerson = (newObject) => {\r\n    return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst popPerson = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst updatePerson = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nmodule.exports = {\r\n    getAll, addPerson, popPerson, updatePerson\r\n}"," let persons = [\r\n    { name: 'Arto Hellas', number: '040-123456' },\r\n    { name: 'Ada Lovelace', number: '39-44-5323523' },\r\n    { name: 'Dan Abramov', number: '12-43-234345' },\r\n    { name: 'Mary Poppendieck', number: '39-23-6423122' }\r\n  ]\r\n\r\nexport default persons;","import React from 'react';\r\n\r\nconst BookLine = (props) => {\r\n    return (\r\n        <tr>\r\n            <td>\r\n                {props.name}\r\n            </td>\r\n            <td>\r\n                {props.number}\r\n            </td>\r\n            <td>\r\n                <button name={props.id} onClick={props.handleClick} >Delete</button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default BookLine;","import React from 'react';\r\nimport BookLine from './BookLine';\r\n\r\n\r\nconst Book = ({persons, searchedPhones, isSearching, handleClick}) => {\r\n\r\n    return (\r\n        <table>\r\n            <tbody>\r\n                {\r\n                    !isSearching ?\r\n                    (\r\n                        persons.map(\r\n                            person => <BookLine key={`${person.name}_${person.number}`} name={person.name} number={person.number} id={person.id} handleClick={handleClick}/>\r\n                        )\r\n                    )\r\n                    :\r\n                    (\r\n                        searchedPhones.map(\r\n                            person => <BookLine key={`${person.name}_${person.number}`} name={person.name} number={person.number} id={person.id} handleClick={handleClick}/>\r\n                        )\r\n                    )\r\n                }\r\n            </tbody>\r\n        </table>\r\n    )\r\n    \r\n}\r\n\r\nexport default Book;","import React from 'react';\r\n\r\nconst Filter = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            filter shown with <input type='text' onChange={props.handleSearch} onKeyUp={props.handleKeyUp} value={props.stringToSearch} name='strToSearch'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\n\r\nconst NewEntry = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                name: <input onChange={props.handleChange} value={props.newName} name={'name'}/>\r\n                number: <input onChange={props.handleChange} value={props.newNumber} name={'number'}/>\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NewEntry;","\r\nimport React from 'react';\r\n\r\nconst Notification = ({noti}) => {\r\n    if (noti.display === false) {\r\n        return null\r\n    }\r\n    \r\n    return (\r\n        <div className='Notification-block' style={{\r\n            borderRadius: '0.5em',\r\n            border: `solid 2px ${noti.error ? 'red' : 'green'}`,\r\n            backgroundColor: `${noti.error ? '#FD8181' : 'lightgreen'}`,\r\n            display: `block`,\r\n            width: '300px',\r\n            alignItems: 'center'\r\n        }}>\r\n            <p className='Notification-text' style={{\r\n                color: noti.error ? 'red' : 'green',\r\n                fontWeight: 300,\r\n                textAlign: 'center'\r\n            }}>{noti.msj}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification;","import React, { useEffect, useState } from 'react'\nimport Book from './Book';\nimport Filter from './Filter';\nimport NewEntry from './NewEntry';\nimport Notification from './Notification';\nimport personService from './service/Persons_service';\n\n\nconst App = (props) => {\n\n  const [ persons, setPersons ] = useState([]);\n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n  const [ stringToSearch, setStrSearch ] = useState('');\n  const [ searchedPhones, setSearchedPhones] = useState([]);\n  const [ isSearching, setIsSearching] = useState(false);\n  const [noti, setNoti] = useState({\n    msj: 'Default msg',\n    display: false,\n    error: false\n  })\n\n  useEffect(() => {\n    personService.getAll().then(response => {setPersons(response.data)}).catch(\n      error => {\n        console.log('Cant resolve persons');\n      }\n    )\n  }, [])\n\n  const handleNoti = (msj, error) => {\n    let newNoti = {\n      msj: msj,\n      display: true,\n      error: error\n    };\n    setNoti(newNoti);\n\n    setTimeout(() => {\n      setNoti({\n      msj: 'Default msg',\n      display: false,\n      error: false\n    })\n  }, 5000);\n\n  }\n\n  const handleChange = (evt) => {\n    evt.target.name === 'name' ? \n    setNewName(evt.target.value)\n    :\n    setNewNumber(evt.target.value)\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    \n    if (newName !== '' && newNumber !== '') {\n\n      const newPerson = {\n        name: newName,\n        number: newNumber\n      };\n      const findPerson = persons.some(person => person.name === newName);\n\n      if (findPerson === false) {\n\n        personService.addPerson(newPerson).then(\n          response => {\n            setNewNumber('');\n            setNewName('');\n          }\n        ).catch(\n          error=>\n          handleNoti('error at upload new person ' + error, true)\n        ).finally(\n          () => {\n            personService.getAll().then(response => {setPersons(response.data)}).catch(\n              error => {\n                handleNoti('error at upload new person ' + error, true)\n              }\n            )\n            handleNoti(`${newPerson.name} is now added to the phonebook`, false);\n          }\n        )\n        \n      }else if (persons.some(person => person.number === newNumber)) {\n        alert(`${newNumber} is already on the phonebook`);\n      } else {\n        let update = window.confirm(`Do you want to update ${newName} phonenumber`);\n        if (update) {\n          let personToUpdate = persons.filter(person => person.name === newName);\n         \n          personService.updatePerson(personToUpdate[0].id, newPerson).catch(\n            error => handleNoti('error at upload new person ' + error, true)\n          ).then(\n            (response) => {\n              handleNoti(`${newName} number is already updated`, false);\n              setPersons(persons.map(\n                person => person.id !== personToUpdate[0].id ? person : response.data\n                \n              ))\n              setNewName('');\n              setNewNumber('');\n            }\n          )\n        }\n      }\n    } else {\n      alert('All inputs need to be filled');\n    }\n  };\n\n  const handleSearch = (evt) => {\n    evt.preventDefault();\n    setStrSearch(evt.target.value);\n    if (evt.target.value === '') {\n      setIsSearching(false);\n    } else {\n      setIsSearching(true);\n    }\n  }\n\n  const handleKeyUp = (evt) => {\n    let searchedPhone = persons.filter(person => person.name.match(new RegExp(stringToSearch, 'i')));\n    setSearchedPhones(searchedPhone);\n  }\n\n  const handleClick = (evt) => {\n    let deleted = true;\n    let id = evt.target.name;\n\n    personService.popPerson(id).catch(\n      error => {\n        handleNoti('error at removing entry. That entry doesnt exist', true);\n        deleted = false;\n        personService.getAll().then(response => {setPersons(response.data)}).catch(\n          error => {\n            handleNoti('error at upload new person ' + error, true)\n          }\n        );\n      }\n    ).finally(\n      () => {\n        if (deleted) {\n          personService.getAll().then(response => {setPersons(response.data)}).catch(\n            error => {\n              handleNoti('error at upload new person ' + error, true)\n            }\n          );\n          handleNoti('deleted sucesfully', false);\n        }\n      }\n    ).catch( error => {\n      handleNoti('Remember name must have at least 3 letter, and number must have atleast 8 numbers', true)\n    })\n    \n    ;\n    \n    \n  }\n\n  \n  return (\n    <div >\n      <h2>Phonebook</h2>\n      <Filter handleSearch={handleSearch} handleKeyUp={handleKeyUp} stringToSearch={stringToSearch}/>\n      <h2>Add a new entry</h2>\n      <Notification noti={noti}/>\n      <NewEntry handleSubmit={handleSubmit} handleChange={handleChange} newName={newName} newNumber={newNumber}/>\n      <h2>Numbers</h2>\n      <Book persons={persons} searchedPhones={searchedPhones} isSearching={isSearching} handleClick={handleClick}/>\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport persons from './Persons';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App persons={persons}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}